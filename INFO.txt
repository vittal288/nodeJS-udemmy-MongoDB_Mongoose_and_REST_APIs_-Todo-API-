MongoDB
--start mongodb 
1.to start MongoDB data base
path>mongod --dbpath="D:\Vittal\MongoDBData"
2. to get mongodb console 
path>mongo  

connection syntact from nodeJS

URL : mongodb://localhost:27017/TodoApp
mongodb://hostName:port/port{27017}/databaseName

-->if MongoDB is running from the machine then the above connection will successfull otherwise through error.
-->If MongoDB running, if "TodoApp" database is not there in the MongoDB even thoug it will connect and this is the feaute of MongoDB
-->Until you insert the collection in the database , it will not list in the MongoDB

OBJECT Destructuring in ES6
Pull out OBJECT and assigning to a viable

var user ={name:"Vittal",age:28};
var {name} =user //-->var name = user.name;
console.log(name);


MONGOOSE:
1. Mongoose is a third party npm component and act as ORM(Object Relational  Mapping)
2. It can be used for user authention , passowrd validation , property validation but writing all these boilerpalting instead we 
   use Mongoose and it comes up with lot many features 
3. it helps us to structure the data.
4. Search for Mongoose validator :http://mongoosejs.com/docs/validation.html
5. Default type casting does exist in Mongoose. If Default schema of data model's object is string then it can accept value like 
   boolean values which default wrapped in double quotes and also accept int values which wrapped in double quotes as well.
For example:
var TodoModel = Mongoose.model({
    text:{
        type:String,
    }
});

but text an accept values like true/false and numbuers as well but which are wrapped in double quotes.

var NewTodoInsertData = new TodoModel({
    text:true / text:123 / text:"some string"
});

NewTodoInsertData.save().callbackPromiseFn();




BODY-PARSER
1. this is npm component and it parses the body of request which comes from cleint and send to server.
2. Converts basically JSON string from client req object to JSON object to server.


TESTING 
convert object id to string, while testing /todos/:id route 
_id.toHexString()


Deleting Records:
Todo.findOneAndRemove({anyKey:val});delete and returns the deleted doc
Todo.findByIdAndRemove({_id:val});delete and returns the deleted doc
OR
Todo.findByIdAndRemove('id in string');delete and returns the deleted doc
Todo.remove({});delete all docs 


MongoDB URL work around 
https://www.udemy.com/the-complete-nodejs-developer-course-2/learn/v4/questions/1777812

Questions to be asked
1. While unit testing rest api, we operating the DB transanction on application database but it could not be actual scenario rt
2. Code coverage report
3. When we have to use catch() block and when we have to use then() method with err & res params, while handling promises

with then
 user.save().then((user)=>{
        res.send(user);
    },(err)=>{
        res.status(400).send(err);
    });

with catch block     
 user.save().then((user)=>{
        res.send(user);
 }).catch((err)=>{
    res.status(400).send(err);
 )}


While running test command in windows, update the following line in package.JSON
"test": "export NODE_ENV=test || \"SET NODE_ENV=test\" && mocha server/**/*.test.js",


For mLab(online free mongodb) login to https://mlab.com/
with username/passowrd for the account 


@@@ ARROW function @@@ 
()=>{}
Arrow function does not support this keyword
 